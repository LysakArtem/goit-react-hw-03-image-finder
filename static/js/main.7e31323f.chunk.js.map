{"version":3,"sources":["components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/Button/Button.js","components/ImageGallery/ImageGallery.js","components/Modal/Modal.js","App.js","index.js"],"names":["Searchbar","state","search","handlerInputChange","e","value","target","setState","handlerSubmit","preventDefault","props","onSubmit","this","className","type","onChange","autoComplete","autoFocus","placeholder","Component","ImageGalleryItem","image","alt","largeImage","onClick","src","Button","ImageGallery","images","totalPage","page","loading","fetchData","url","searchImages","fetch","then","res","json","hits","total","finally","handlerLoadMoreClick","prevProps","prevState","remainingPages","map","id","webformatURL","tags","largeImageURL","openModal","color","height","width","modalRoot","document","querySelector","Modal","handleKeyDown","code","onClose","handleBackdropClick","currentTarget","window","addEventListener","removeEventListener","createPortal","children","App","showModal","largeImg","altImg","toggleModal","img","formSubmitHandler","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7e31323f.chunk.js","sourcesContent":["import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nclass Searchbar extends Component {\r\n  state = {\r\n    search: '',\r\n  };\r\n  handlerInputChange = (e) => {\r\n    const { value } = e.target;\r\n    this.setState({ search: value });\r\n  };\r\n  handlerSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state.search);\r\n    this.setState({ search: '' });\r\n  };\r\n  render() {\r\n    const { search } = this.state;\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form onSubmit={this.handlerSubmit} className=\"SearchForm\">\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            onChange={this.handlerInputChange}\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            value={search}\r\n            placeholder=\"Search images and photos\"\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\nexport default Searchbar;\r\n\r\nSearchbar.propTypes = {\r\n  Searchbar: PropTypes.func,\r\n};\r\n","import PropTypes from 'prop-types';\r\nexport default function ImageGalleryItem({ image, alt, largeImage, onClick }) {\r\n  return (\r\n    <li className=\"ImageGalleryItem\" onClick={() => onClick(largeImage, alt)}>\r\n      <img src={image} alt={alt} className=\"ImageGalleryItem-image\" />\r\n    </li>\r\n  );\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n  image: PropTypes.string.isRequired,\r\n  alt: PropTypes.string,\r\n  largeImage: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nexport default function Button({ onClick }) {\r\n  return (\r\n    <button type=\"button\" className=\"Button\" onClick={onClick}>\r\n      Load More\r\n    </button>\r\n  );\r\n}\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n","import { Component } from 'react';\r\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\nimport Button from '../Button/Button';\r\nimport Loader from 'react-loader-spinner';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass ImageGallery extends Component {\r\n  state = {\r\n    images: [],\r\n    totalPage: null,\r\n    page: 1,\r\n    loading: false,\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.searchImages !== this.props.searchImages) {\r\n      this.setState({ images: [], totalPage: null, page: 1 });\r\n      this.fetchData();\r\n    } else if (prevState.page !== this.state.page) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  fetchData = () => {\r\n    const API_KEY = '18602896-269905921176f8eb36b1925d1';\r\n    const BASE_URL = 'https://pixabay.com/api';\r\n    const url = `${BASE_URL}/?q=${this.props.searchImages}&page=${this.state.page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`;\r\n    this.setState({ loading: true });\r\n    fetch(url)\r\n      .then((res) => res.json())\r\n      .then((res) =>\r\n        this.setState(({ images }) => ({\r\n          images: [...images, ...res.hits],\r\n          totalPage: res.total,\r\n        }))\r\n      )\r\n      .finally(() => this.setState({ loading: false }));\r\n  };\r\n\r\n  handlerLoadMoreClick = () => {\r\n    this.setState(({ page }) => ({ page: page + 1 }));\r\n  };\r\n\r\n  render() {\r\n    const { images, loading, totalPage, page } = this.state;\r\n    const remainingPages = totalPage - page * 12;\r\n    return (\r\n      <>\r\n        <ul className=\"ImageGallery\">\r\n          {totalPage !== 0 ? (\r\n            images.map(({ id, webformatURL, tags, largeImageURL }) => (\r\n              <ImageGalleryItem\r\n                key={id}\r\n                image={webformatURL}\r\n                alt={tags}\r\n                largeImage={largeImageURL}\r\n                onClick={this.props.openModal}\r\n              />\r\n            ))\r\n          ) : (\r\n            <div>По вашему запросу ничего не найдено!</div>\r\n          )}\r\n        </ul>\r\n        {!loading && remainingPages > 0 && (\r\n          <Button onClick={this.handlerLoadMoreClick} />\r\n        )}\r\n        <div className=\"spiner\">\r\n          {loading && (\r\n            <Loader type=\"ThreeDots\" color=\"#3f51b5\" height={80} width={80} />\r\n          )}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImageGallery;\r\n\r\nImageGallery.propTypes = {\r\n  searchImages: PropTypes.string.isRequired,\r\n  openModal: PropTypes.func.isRequired,\r\n};\r\n","import { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\nconst modalRoot = document.querySelector('#modal-root');\r\nexport default class Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = (e) => {\r\n    if (e.code === 'Escape') {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n  handleBackdropClick = (e) => {\r\n    if (e.target === e.currentTarget) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return createPortal(\r\n      <div className=\"Overlay\" onClick={this.handleBackdropClick}>\r\n        <div className=\"Modal\">{this.props.children}</div>\r\n      </div>,\r\n      modalRoot\r\n    );\r\n  }\r\n}\r\n\r\nModal.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\n","import { Component } from 'react';\nimport Searchbar from './components/Searchbar/Searchbar';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport Modal from './components/Modal/Modal';\n\nclass App extends Component {\n  state = {\n    searchImages: '',\n    showModal: false,\n    largeImg: '',\n    altImg: '',\n  };\n\n  toggleModal = (img, alt) => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n      largeImg: img,\n      altImg: alt,\n    }));\n  };\n\n  formSubmitHandler = (img) => {\n    this.setState({ searchImages: img });\n  };\n  render() {\n    const { searchImages, showModal } = this.state;\n    return (\n      <>\n        {showModal && (\n          <Modal onClose={this.toggleModal}>\n            <img src={this.state.largeImg} alt={this.state.altImg} />\n          </Modal>\n        )}\n        <Searchbar onSubmit={this.formSubmitHandler} />\n        <ImageGallery\n          searchImages={searchImages}\n          openModal={this.toggleModal}\n        />\n      </>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}